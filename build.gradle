// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {

    appCompat = '1.1.0'

    gsonVersion = '2.8.6'

    retrofitVersion = '2.7.1'
    retrofitAdapterRxjavaVersion = '2.5.0'
    okhttp3Version = '4.3.1'

    // architecture components
    workManagerVersion = '2.0.0'
    lifecycleVersion = '2.2.0-rc03'

    // Kotlin enabling dependencies
    kotlinVersion = '1.3.50'
    kotlinCoroutinesVersion = '1.3.0-M1'
    coreKtxVersion = '1.1.0'

    // Picasso
    picassoVersion = '2.71828'
    picassoTransformationsVersion = '2.2.1'

    multidexVersion = '2.0.1'
    constraintLayoutVersion = '1.1.3'

    dependencies = [
            gson                     : "com.google.code.gson:gson:${gsonVersion}",
            appCompat                : "androidx.appcompat:appcompat:${appCompat}",
            constraintLayout         : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            materialDesign           : "com.google.android.material:material:1.2.0-alpha04",
            glide                    : "com.github.bumptech.glide:glide:4.10.0",
            glideCompiler            : "com.github.bumptech.glide:compiler:4.10.0",


            retrofit                 : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverterGson    : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapterRxjava    : "com.squareup.retrofit2:adapter-rxjava2:${retrofitAdapterRxjavaVersion}",

            okhttp3                  : "com.squareup.okhttp3:logging-interceptor:${okhttp3Version}",

            lifecycleViewmodelKtx    : "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleVersion}",
            lifecycleExtensions      : "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}",

            kotlinAndroidExtensions  : "org.jetbrains.kotlin:kotlin-android-extensions:${kotlinVersion}",
            kotlinGradlePlugin       : "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}",
            kotlinStdlibJdk7         : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            kotlinCoroutinesCore     : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
            kotlinCoroutinesAndroid  : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}",

            coreKtx                  : "androidx.core:core-ktx:${coreKtxVersion}",
            picasso                  : "com.squareup.picasso:picasso:${picassoVersion}",
            picassoTransformations   : "jp.wasabeef:picasso-transformations:${picassoTransformationsVersion}",
            workManager              : "androidx.work:work-runtime:${workManagerVersion}",

            multidex                 : "androidx.multidex:multidex:${multidexVersion}"
    ]

    dependencyInjection = [
            dagger                     : "com.google.dagger:dagger-android:2.22",
            daggerSupport              : "com.google.dagger:dagger-android-support:2.22",
            daggerAndroidProc          : "com.google.dagger:dagger-android-processor:2.22",
            daggerCompiler             : "com.google.dagger:dagger-compiler:2.22",
    ]

    firebaseAnalytics = '17.0.1'
    firebaseRemoteConfig = '18.0.0'
    firebaseCrashlytics = '2.10.1'
    firebaseDependencies = [
            firebaseRemoteConfig        : "com.google.firebase:firebase-config:${firebaseRemoteConfig}",
            firebaseAnalytics           : "com.google.firebase:firebase-analytics:${firebaseAnalytics}",
            firebaseCrashlytics         : "com.crashlytics.sdk.android:crashlytics:${firebaseCrashlytics}"
    ]
}
